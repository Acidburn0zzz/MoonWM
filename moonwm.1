.TH MoonWM 1 moonwm\-VERSION
.SH NAME
MoonWM \- My own outstandingly named Window Manager
.SH SYNOPSIS
.B moonwm
.RB [ \-v ]
.SH DESCRIPTION
.P
.B THIS MANPAGE IS NOT COMPLETE. LOOK AT config.h FOR ALL SHORTCUTS
.P
MoonWM is a dynamic window manager for X. It manages windows in tiled, monocle
and floating layouts. Either layout can be applied dynamically, optimising the
environment for the application in use and the task performed.
.P
In tiled layouts windows are managed in a master and stacking area. The master
area on the left contains one window by default, and the stacking area on the
right contains all other windows. The number of master area windows can be
adjusted from zero to an arbitrary number. In monocle layout all windows are
maximised to the screen size. In floating layout windows can be resized and
moved freely. Dialog windows are always managed floating, regardless of the
layout applied.
.P
Windows are grouped by tags. Each window can be tagged with one or multiple
tags. Selecting certain tags displays all windows with these tags.
.P
Each screen contains a small status bar which displays all available tags, the
layout, the title of the focused window, and the text read from the root window
name property, if the screen is focused. A floating window is indicated with an
empty square and a maximised floating window is indicated with a filled square
before the windows title.  The selected tags are indicated with a different
color. The tags of the focused window are indicated with a filled square in the
top left corner.  The tags which are applied to one or more windows are
indicated with an empty square in the top left corner.
.P
MoonWM draws a small border around windows to indicate the focus state.
.P
On start, MoonWM can start additional programs that may be specified in two special
shell scripts (see the FILES section below), autostart_blocking.sh and
autostart.sh.  The former is executed first and MoonWM will wait for its
termination before starting.  The latter is executed in the background before
MoonWM enters its handler loop.
.P
Either of these files may be omitted.
.SH OPTIONS
.TP
.B \-v
prints version information to stderr, then exits.
.SH USAGE
.SS Status bar
.TP
.B X root window name
is read and displayed in the status text area. It can be set with the
.BR xsetroot (1)
command.
.TP
.B Button1
click on a tag label to display all windows with that tag, click on the layout
label toggles between tiled and floating layout.
.TP
.B Button3
click on a tag label adds/removes all windows with that tag to/from the view.
.TP
.B Super\-Button1
click on a tag label applies that tag to the focused window.
.TP
.B Super\-Button3
click on a tag label adds/removes that tag to/from the focused window.
.SS Keyboard commands
.TP
.B Super\-h
Focus next window to the left.
.TP
.B Super\-j
Focus next window downwards.
.TP
.B Super\-k
Focus next window upwards.
.TP
.B Super\-h
Focus next window to the right.
.TP
.B Super\-Control\-[hjkl]
Resize
.TP
.B Super\-Shift\-[hjkl]
Move
.TP
.B Super\-t
Sets stack layout.
.TP
.B Super\-c
Sets deck layout.
.TP
.B Super\-Shift\-f
Sets floating layout.
.TP
.B Super\-Shift\-t
Sets stack left layout.
.TP
.B Super\-Control\-t
Sets bottom stack layout.
.TP
.B Super\-m
Sets monocle layout.
.TP
.B Super\-f
Toggles fullscreen on the current window.
.TP
.B Super\-Return
Start
.BR $TERMINAL.
.TP
.B Super\-d
Spawn
.BR dmemucmd
for launching other programs (you have to have a symlink or script with that name).
.TP
.B Super\-Shift\-[1..n]
Apply nth tag to focused window.
.TP
.B Super\-Shift\-0
Apply all tags to focused window.
.TP
.B Super\-Control\-Shift\-[1..n]
Add/remove nth tag to/from focused window.
.TP
.B Super\-[1..n]
View all windows with nth tag.
.TP
.B Super\-0
View all windows with any tag.
.TP
.B Super\-Control\-[1..n]
Add/remove all windows with nth tag to/from the view.
.TP
.B Super\-Comma,
Focus previous occupied tag.
.TP
.B Super\-Period,
Focus next occupied tag.
.TP
.B Super\-Prior,
Focus previous screen, if any.
.TP
.B Super\-Next.
Focus next screen, if any.
.TP
.B Super\-Shift\-Prior,
Send focused window to previous screen, if any.
.TP
.B Super\-Shift\-Next.
Send focused window to next screen, if any.
.TP
.B Super\-F1
Toggles bar on and off.
.TP
.B Super\-space
Focus next client
.TP
.B Super\-Shift\-q
Close focused window.
.TP
.B Super\-Shift\-space
Toggle focused window between tiled and floating state.
.TP
.B Super\-Tab
Toggles to the previously selected tags.
.TP
.SH FILES
The files containing programs to be started along with MoonWM are searched for in
the following directories:
.IP "1. $XDG_DATA_HOME/moonwm"
.IP "2. $HOME/.local/share/moonwm"
.IP "3. $HOME/.moonwm"
.P
The first existing directory is scanned for any of the autostart files below.
.TP 15
autostart.sh
This file is started as a shell background process before MoonWM enters its handler
loop.
.TP 15
autostart_blocking.sh
This file is started before any autostart.sh; MoonWM waits for its termination.
.SH CUSTOMIZATION
This MoonWM build can be customized by editing the config.h or by xrdb.
For the later also see
.BR README.md
.SH SEE ALSO
.BR dmenu (1),
.BR st (1)
.SH ISSUES
Java applications which use the XToolkit/XAWT backend may draw grey windows
only. The XToolkit/XAWT backend breaks ICCCM-compliance in recent JDK 1.5 and early
JDK 1.6 versions, because it assumes a reparenting window manager. Possible workarounds
are using JDK 1.4 (which doesn't contain the XToolkit/XAWT backend) or setting the
environment variable
.BR AWT_TOOLKIT=MToolkit
(to use the older Motif backend instead) or running
.B xprop -root -f _NET_WM_NAME 32a -set _NET_WM_NAME LG3D
or
.B wmname LG3D
(to pretend that a non-reparenting window manager is running that the
XToolkit/XAWT backend can recognize) or when using OpenJDK setting the environment variable
.BR _JAVA_AWT_WM_NONREPARENTING=1 .
.SH BUGS
Send all bug reports with a patch to hackers@suckless.org.
